package:
  name: mne
  version: "0.13.1"

source:
  fn: mne-0.13.1.tar.gz
  url: https://pypi.python.org/packages/2f/1f/f7db5c21d8815da1448bf947849b8b501e26d1a03716b27e60073c5fc187/mne-0.13.1.tar.gz
  md5: 51cc1e955e96e7fa8c3f900895fc471a
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # noarch_python: True
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - mne = mne:main
    #
    # Would create an entry point called mne that calls mne.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - numpy >=1.8
    - scipy >=0.12
    - matplotlib >=1.3
    - scikit-learn >=0.18
    - nibabel >=2.1.0
    - pandas >=0.12

  run:
    - python
    - numpy >=1.8
    - scipy >=0.12
    - matplotlib >=1.3

test:
  # Python imports
  imports:
    - mne
    - mne.beamformer
    - mne.beamformer.tests
    - mne.channels
    - mne.channels.tests
    - mne.commands
    - mne.commands.tests
    - mne.connectivity
    - mne.connectivity.tests
    - mne.data
    - mne.datasets
    - mne.datasets._fake
    - mne.datasets.brainstorm
    - mne.datasets.eegbci
    - mne.datasets.megsim
    - mne.datasets.misc
    - mne.datasets.multimodal
    - mne.datasets.sample
    - mne.datasets.somato
    - mne.datasets.spm_face
    - mne.datasets.testing
    - mne.datasets.tests
    - mne.decoding
    - mne.decoding.tests
    - mne.externals
    - mne.externals.h5io
    - mne.externals.tempita
    - mne.forward
    - mne.forward.tests
    - mne.gui
    - mne.gui.tests
    - mne.inverse_sparse
    - mne.inverse_sparse.tests
    - mne.io
    - mne.io.array
    - mne.io.array.tests
    - mne.io.brainvision
    - mne.io.brainvision.tests
    - mne.io.bti
    - mne.io.bti.tests
    - mne.io.cnt
    - mne.io.cnt.tests
    - mne.io.ctf
    - mne.io.ctf.tests
    - mne.io.edf
    - mne.io.edf.tests
    - mne.io.eeglab
    - mne.io.egi
    - mne.io.egi.tests
    - mne.io.fiff
    - mne.io.fiff.tests
    - mne.io.kit
    - mne.io.kit.tests
    - mne.io.nicolet
    - mne.io.nicolet.tests
    - mne.io.tests
    - mne.minimum_norm
    - mne.minimum_norm.tests
    - mne.preprocessing
    - mne.preprocessing.tests
    - mne.realtime
    - mne.realtime.tests
    - mne.simulation
    - mne.simulation.tests
    - mne.stats
    - mne.stats.tests
    - mne.tests
    - mne.time_frequency
    - mne.time_frequency.tests
    - mne.viz
    - mne.viz.tests

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://martinos.org/mne
  license: BSD (3-clause)
  summary: 'MNE python project for MEG and EEG data analysis.'
  license_family: BSD

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
